{"version":3,"sources":["user/Profile.module.css","Transaction/Transaction.module.css","Friendlist/Friendlist.module.css","statistics/statistics.module.css","Transaction/Transaction.js","user/user.js","Friendlist/Friendlist.js","statistics/statistics.js","index.js"],"names":["module","exports","TransactionHistory","className","style","transactionHistory","headerBox","transactions","map","trans","styleRow","key","id","box","type","amount","currency","Profile","user","name","tag","location","avatar","stats","profile","description","src","alt","statsBox","label","quantity","followers","views","likes","FriendList","friends","friendList","friend","status","isOnline","online","offline","item","width","Statistics","statistic","title","statlist","percentage","ReactDOM","render","statisticalData","Transaction","items","document","getElementById"],"mappings":"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","file":"static/js/main.52d0aa6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1sv4x\",\"name\":\"Profile_name__1zD6u\",\"tag\":\"Profile_tag__3fbQY\",\"location\":\"Profile_location__Gz4TB\",\"avatar\":\"Profile_avatar__2v17G\",\"description\":\"Profile_description__1xUn9\",\"stats\":\"Profile_stats__39GOJ\",\"statsBox\":\"Profile_statsBox__3OB_6\",\"label\":\"Profile_label__1Q4HP\",\"quantity\":\"Profile_quantity__1-yFV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transaction_transactionHistory__10-a8\",\"headerBox\":\"Transaction_headerBox__3EHe9\",\"styleRow\":\"Transaction_styleRow__O0Yo7\",\"box\":\"Transaction_box__1V5qU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"Friendlist_friendList__3NTPA\",\"item\":\"Friendlist_item__34O-P\",\"online\":\"Friendlist_online__3lh6m\",\"offline\":\"Friendlist_offline__FMRSp\",\"avatar\":\"Friendlist_avatar__2NltT\",\"name\":\"Friendlist_name__38BHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"statistics_statistic__1Urom\",\"title\":\"statistics_title__jv9zK\",\"statlist\":\"statistics_statlist__mnC5z\",\"item\":\"statistics_item__ooIyP\",\"label\":\"statistics_label__1AEvl\",\"percentage\":\"statistics_percentage__3MAy-\"};","import React from \"react\";\r\nimport transactions from \"./transactions.json\";\r\nimport style from \"./Transaction.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nfunction TransactionHistory() {\r\n  return (\r\n    <table className={style.transactionHistory}>\r\n      <thead>\r\n        <tr className={style.headerBox}>\r\n          <th className={style.headerBox}>Type</th>\r\n          <th className={style.headerBox}>Amount</th>\r\n          <th className={style.headerBox}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {transactions.map((trans) => (\r\n          <tr className={style.styleRow} key={trans.id}>\r\n            <td className={style.box}>{trans.type}</td>\r\n            <td className={style.box}>{trans.amount}</td>\r\n            <td className={style.box}>{trans.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\n\n// import user from \"./user.json\";\nimport style from \"./Profile.module.css\";\nimport PropTypes from \"prop-types\";\nfunction Profile(user) {\n  const { name, tag, location, avatar, stats } = user;\n  return (\n    <div className={style.profile}>\n      <div className={style.description}>\n        <img src={avatar} alt=\"user avatar\" className={style.avatar} />\n        <p className={style.name}>{name}</p>\n        <p className={style.tag}>{tag}</p>\n        <p className={style.location}>{location}</p>\n      </div>\n\n      <ul className={style.stats}>\n        <li className={style.statsBox}>\n          <span className={style.label}>Followers</span>\n          <span className={style.quantity}>{stats.followers}</span>\n        </li>\n        <li className={style.statsBox}>\n          <span className={style.label}>Views</span>\n          <span className={style.quantity}>{stats.views}</span>\n        </li>\n        <li className={style.statsBox}>\n          <span className={style.label}>Likes</span>\n          <span className={style.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  tag: PropTypes.string,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number,\n    views: PropTypes.number,\n    likes: PropTypes.number,\n  }),\n};\nexport default Profile;\n","import React, { Fragment } from \"react\";\r\nimport style from \"./Friendlist.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <Fragment>\r\n      <ul className={style.friendList}>\r\n        {friends.map((friend) => {\r\n          const status = friend.isOnline ? style.online : style.offline;\r\n          return (\r\n            <li className={style.item} key={friend.id}>\r\n              <span className={status}></span>\r\n              <img\r\n                className={style.avatar}\r\n                src={friend.avatar}\r\n                alt={friend.name}\r\n                width=\"100\"\r\n              />\r\n              <p className={style.name}>{friend.name}</p>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport statistic from \"./statistical-data.json\";\r\nimport style from \"./statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nfunction Statistics() {\r\n  return (\r\n    <section className={style.statistic}>\r\n      <h2 className={style.title}>Upload stats</h2>\r\n\r\n      <ul className={style.statlist}>\r\n        {statistic.map((stats) => (\r\n          <li key={stats.id} className={style.item}>\r\n            <span className={style.label}>{stats.label}</span>\r\n            <span className={style.percentage}>{stats.percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport TransactionHistory from \"./Transaction/Transaction\";\r\nimport transactions from \"./Transaction/transactions.json\";\r\nimport Profile from \"./user/user\";\r\nimport user from \"./user/user.json\";\r\nimport FriendList from \"./Friendlist/Friendlist\";\r\nimport friends from \"./Friendlist/friends.json\";\r\nimport Statistics from \"./statistics/statistics\";\r\nimport statisticalData from \"./statistics/statistical-data.json\";\r\n\r\nReactDOM.render(\r\n  <Fragment>\r\n    <Profile\r\n      name={user.name}\r\n      tag={user.tag}\r\n      location={user.location}\r\n      avatar={user.avatar}\r\n      stats={user.stats}\r\n    />\r\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n    <FriendList friends={friends} />\r\n    <TransactionHistory items={transactions} />\r\n  </Fragment>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}